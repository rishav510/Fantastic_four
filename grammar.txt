<ID>               --> [A-Za-z_][A-Za-z0-9_]*

<ASSIGNMENT_STMT>  --> <ID> = <ARITHMETIC_EXPR> | <BOOLEAN_EXPR> ;

<ARITHMETIC_EXPR>  --> <ARITHMETIC_EXPR> + <LINEAR_EXPR> | <ARITHMETIC_EXPR> - <LINEAR_EXPR> | <LINEAR_EXPR>
<LINEAR_EXPR> --> <LINEAR_EXPR> * <FACTOR> | <LINEAR_EXPR> / <FACTOR> | <FACTOR>
<FACTOR> --> <ID> | CONST_ARITH | (<ARITMETIC_EXPR>)


<BOOLEAN_EXPR> --> <BOOLEAN_EXPR> ||| <OR_EXPR>
<OR_EXPR> --> <OR_EXPR> &&& <AND_EXPR>
<AND_EXPR> --> ID | CONST_BOOL

/**fROM here onwards  We will add declaration grammer **/




/* Multidimensional Recangualar Array Grammer */


<ArrayDecl> --> <SingleValArray> | <MultivalArray>
<MultivalArray> --> declare list of variables <ID><List> : array  <DIM > of integer <Semicolumn>
<List> --> <ID><List> | <ID>
<DIM> --> SQO low..high SQC <DIM> | SQO low..high SQC 
<SingleValArray> --> declare <ID> : array <DIM> of integer <Semicolumn>
<Semicolumn> --> ';'

  
